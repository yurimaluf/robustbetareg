library(readr)
library(RobustBetaReg)
library(robustbetareg)
setwd("/home/yurimaluf/TESE/Tese - Paper/Yuri - Papers/Paper - Robust Estimation via MPD in Beta Regression/R/Reports")
source("SMLE.R", encoding = "UTF-8")
source("MDPDE.R", encoding = "UTF-8")
pacotewd="/home/yurimaluf/TESE/Tese - Paper/Yuri - Papers/Paper - Robust Estimation via MPD in Beta Regression/Pacote RbstBetaReg/RobustBetaReg"
setwd(pacotewd)

#Data import
link.yuri=url("https://raw.githubusercontent.com/yurimaluf/RobustBetaReg/main/planosaude.csv")
aux=read_csv(link.yuri)
summary(aux$pop_planosaude)

#Fitting MLE
fit.MLE <- robustbetareg(pop_planosaude ~ IDHM + Gini + Urbanizacao|Gini, data = aux,alpha=0)
summary(fit.MLE)
plot(fit.MLE)
#Simulated Envelope
q=qqnorm(residuals(fit.MLE),plot.it = F)
plotenvelope(fit.MLE,ylim=c(-5,7))
text(q$x[c(93,124,59)],q$y[c(93,124,59)],labels = c("93","124","59"),pos = c(1,3,4))
#Cooks Distance
plot(cooks.distance(fit.MLE),type="h",xlab="Obs. number",ylab="Cook's distance",ylim=c(0,0.6))
text(c(93,124,59),cooks.distance(fit.MLE)[c(93,124,59)],labels = c("93","124","59"),pos = c(3,3,3))
#Critical region
mean(fit.MLE$fitted.values$mu.predict*fit.MLE$fitted.values$phi.predict<1)

#Fitting LSMLE
fit.LSMLE <- robustbetareg(pop_planosaude ~ IDHM + Gini + Urbanizacao|Gini, data = aux, alpha = 0.02)
class(fit.LSMLE)

colnames(aux2)
j=7
# x=cbind(rep(1,150),aux2[,c(invest.beta[j,-1])])
# z=cbind(rep(1,150),aux2[,c(invest.gamma[j,-1])])
x=cbind(rep(1,150),aux2[,as.numeric(invest2.beta[j,])])
z=cbind(rep(1,150),aux2[,as.numeric(invest2.gamma[j,])])
colnames(aux2[,as.numeric(invest2.beta[j,])])
#invest.beta.name[j,]
invest.gamma.name[j,]


x=cbind(rep(1,150),runif(150))
dim(x)
dim(beta)
beta=c(3,6)
x%*%beta

###
#(L)SMLE
SMLE_BETA(y=y,X=x,Z=z,qoptimal = T)
teste.LSMLE=robustbetareg(pop_planosaude ~ x[,-1]|z[,-1], data = as.data.frame(aux2))
summary(teste.LSMLE)
plot(teste.LSMLE$sqv,type="l")
abline(h=0.02)
###
#(L)MDPDE
MDPDE_BETA(y=y,X=x,Z=z,qoptimal = T)
teste.LMDPDE=robustbetareg(pop_planosaude ~ x[,-1]|z[,-1], data = as.data.frame(aux2),type = "LMDPDE")
summary(teste.LMDPDE)
plot(teste.LMDPDE$sqv,type="l")
abline(h=0.02)
###
#MLE
teste.MLE=robustbetareg(pop_planosaude ~ x[,-1]|z[,-1], data = as.data.frame(aux2),alpha = 0)
#teste.MLE=betareg(pop_planosaude ~ x[,-1]|z[,-1], data = as.data.frame(aux2))
summary(teste.LSMLE)
summary(teste.LMDPDE)
summary(teste.MLE)


summary(robustbetareg(pop_planosaude ~ Urbanizacao + PIB_percap|PIB_percap, data = aux))
summary(robustbetareg(pop_planosaude ~ Urbanizacao + PIB_percap|PIB_percap, data = aux,type="LMDPDE"))
summary(robustbetareg(pop_planosaude ~ Urbanizacao + PIB_percap|PIB_percap, data = aux,alpha=0))


#TABELA RESULTADO SQV
check.LSMLE=RobustBetaReg::Opt.Tuning.LSMLE.List(y=y,x=x,z=z,link="logit",link.phi="log",B=12)
plot(check.LSMLE$sqv,type="l")
cbind(check.LSMLE$sqv,check.LSMLE$par[1:length(check.LSMLE$sqv),],check.LSMLE$std[1:length(check.LSMLE$sqv),])

check.LMDPDE=RobustBetaReg::Opt.Tuning.LMDPDE.List(y=y,x=x,z=z,link="logit",link.phi="log",B=12)
plot(check.LMDPDE$sqv,type="l")
cbind(check.LMDPDE$sqv,check.LMDPDE$par[1:length(check.LMDPDE$sqv),],check.LMDPDE$std[1:length(check.LMDPDE$sqv),])

summary(robustbetareg(pop_planosaude ~ x[,-1]|z[,-1], alpha = 0.06 ,data = as.data.frame(aux2)))
summary(robustbetareg(pop_planosaude ~ x[,-1]|z[,-1], alpha = 0.06, type = "LMDPDE" ,data = as.data.frame(aux2)))

summary(robustbetareg(pop_planosaude ~ Urbanizacao+Gini+IDHM |Gini  ,data = aux))
summary(robustbetareg(pop_planosaude ~ Urbanizacao |1 ,data = aux,type="LMDPDE"))
SMLE_BETA(y=y,X=aux2[,c()],Z=z,qoptimal = T)

log(aux$pop_planosaude)-log(1-aux$pop_planosaude)
pairs(aux2[,c(1,2,8,9,13)], pch = 19)
colnames(aux2)

aux3=cbind(aux2[,c(1,2,8,9)],log(aux$pop_planosaude)-log(1-aux$pop_planosaude))
colnames(aux3)=c(colnames(aux2[,c(1,2,8,9)]),"logit(pop_plano)")
pairs(aux3, pch = 19)
summary(aux$pop_planosaude)


panel.cor <- function(x, y){
  usr <- par("usr"); on.exit(par(usr))
  par(usr = c(0, 1, 0, 1))
  r <- round(cor(x, y), digits=2)
  txt <- paste0("R = ", r)
  cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = 1)
}

pairs(aux3, upper.panel = panel.cor)



#Teste Otimizacao Ponto Inicial
opt.test=function(start_theta,alpha.ponto){
  #optim(par=start_theta,fn=RobustBetaReg::L_alpha,gr=RobustBetaReg::Psi_LSMLE_Cpp,y=y,X=x,Z=z,alpha=alpha.ponto,link_mu="logit",link_phi="log",control = list(fnscale=-1,maxit=5000))
  optim(par=start_theta,fn=RobustBetaReg::D_alpha,gr=RobustBetaReg::Psi_LMDPDE_Cpp,y=y,X=x,Z=z,alpha=alpha.ponto,link_mu="logit",link_phi="log",control = list(fnscale=-1,maxit=5000))
}

start.mle=as.numeric(do.call("c",betareg.fit(x,y,z,link="logit",link.phi = "log")$coefficients))
opt.test(RobustBetaReg::Initial.points(y=y,X=x,Z=z),alpha.ponto = 0.001)
opt.test(start.mle,alpha.ponto = 0.001)
RobustBetaReg::L_alpha(c(-6,start.mle[-1]),y=y,X=x,Z=z,alpha=0.06,link_mu="logit",link_phi="log")


######VARIACOES
exclude.X=x[,-4]
exclude.Z=z[,-2]
#MDPDE
MDPDE_BETA(y=y,X=exclude.X,Z=exclude.Z,qoptimal = T)
teste=robustbetareg(pop_planosaude ~ x[,-c(1,4)]|z[,-c(1,2)], data = as.data.frame(aux2),type = "LMDPDE")
summary(teste)
plot(teste$sqv,type="l")
abline(h=0.02)
#SMLE
exclude.X=c(4)
#exclude.Z.MDPDE=c()
SMLE_BETA(y=y,X=exclude.X,Z=exclude.Z,qoptimal = T)
teste=robustbetareg(pop_planosaude ~ x[,-c(1,4)]|z[,-c(1,2)], data = as.data.frame(aux2))
summary(teste)
plot(teste$sqv,type="l")
abline(h=0.02)



########################################
alpha.test=seq(0,0.18,by=.02)
tabela=NULL
for(i in 1:10){
  result=robustbetareg(pop_planosaude ~ x[,-1]|z[,-1], data = as.data.frame(aux2),alpha=alpha.test[i])
  tabela=rbind(tabela,c(as.numeric(do.call("c",result$coefficients)),as.numeric(do.call("c",result$std.error))))
}

tabela.sqv=cbind(alpha.test,tabela,fit.LSMLE$sqv)
colnames(tabela.sqv)=c("alpha","B1","B2","B3","B4","G1","G2","ep.B1","ep.B2","ep.B3","ep.B4","ep.G1","ep.G2","SQV")
tabela.sqv=as.data.frame(tabela.sqv)
write.table(tabela.sqv,file = "TabelaSQV")
#######################################






#Retirando a covariável Gini da modelagem do parâmetro de precisão e estimando por MLE e LSMLE obtemos os seguintes resultados:
#MLE
fit.mle <- robustbetareg(pop_planosaude ~ IDHM + Gini + Urbanizacao|1, data = aux,alpha = 0)
summary(fit.mle)
#LSMLE
fit <- robustbetareg(pop_planosaude ~ IDHM + Gini + Urbanizacao|1, data = aux)
summary(fit)
#LMDPDE
fit <- robustbetareg(pop_planosaude ~ IDHM + Gini + Urbanizacao|1, data = aux, type="LMDPDE")
summary(fit)


###Retirando novamente a covariável Gini, mas agora no submodelo da média gerou-se os seguintes resultados pra MLE e LSMLE:
##MLE
fit.mle=robustbetareg(pop_planosaude ~ IDHM + Urbanizacao | 1, data = aux[-124,], alpha = 0)
summary(fit.mle)
#residuals MLE
plot(fit.mle$residuals,ylab="Standardized Weighted 2",ylim=c(-2.5,7))
text(c(93),fit.mle$residuals[93],labels=c("93"),pos=1)
abline(h=0)
#Cooks Distance MLE
#Simulated envelope  MLE
q=qqnorm(residuals(fit.mle),plot.it = F)
plotenvelope(fit.mle,ylim=c(-5,7))
text(q$x[c(93,124,59)],q$y[c(93,124,59)],labels = c("93","124","59"),pos = c(1,3,4))

##LSMLE
fit=robustbetareg(pop_planosaude ~ IDHM + Urbanizacao | 1, data = aux)
summary(fit)
#residuals LSMLE
plot(fit$residuals,ylab="Standardized Weighted 2",ylim=c(-2.5,7),pch=16)
text(c(93,124,59),fit$residuals[c(93,124,59)],labels=c("93","124","59"),pos=c(1,3,3))
abline(h=0)
#Cooks Distance MLE
plot(cooks.distance(fit.mle),type="h",xlab="Obs. number",ylab="Cook's distance",main="Cook's distance plot")
#Simulated envelope  LSMLE
q=qqnorm(residuals(fit),plot.it = F)
plotenvelope(fit,ylim=c(-5,7),n.sim = 100)
text(q$x[c(93,124,59)],q$y[c(93,124,59)],labels = c("93","124","59"),pos = c(1,3,4))
#Weights LSMLE
plot(fit$weights,ylab="Weights")
abline(h=1)
text(c(93,124,59),fit$weights[c(93,124,59)],labels=c("93","124","59"),pos=c(3,2,2))
#Weights LSMLE x MLE
plot(fit$residuals,fit$weights,xlab="Residuals",ylab="Weights")
text(fit$residuals[c(93,124,59)],fit$weights[c(93,124,59)],labels=c("93","124","59"),pos=c(3,1,4))


